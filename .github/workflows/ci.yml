name: CI
on:
  workflow_dispatch:
  schedule:
    - cron: "0 16 * * 0"

jobs:
  check:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Should build?
        id: should_build
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! git checkout origin/update build.md; then
            echo "first time building!"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          else
            UPDATE_CFG=$(./build.sh config.toml --config-update)
            if [ "$UPDATE_CFG" ]; then
              echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
            else
              echo "SHOULD_BUILD=0" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Clear older runs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list -L400 --json databaseId -q '.[].databaseId' | tail -n+10 | xargs -IID gh api "repos/$GITHUB_REPOSITORY/actions/runs/ID" -X DELETE || :

    outputs:
      SHOULD_BUILD: ${{ steps.should_build.outputs.SHOULD_BUILD }}

  config_check:
      runs-on: ubuntu-latest
      needs: check
      if: ${{ needs.check.outputs.SHOULD_BUILD == 1 }}
      env:
        TG_TOKEN: ${{ secrets.TG_TOKEN }}
        TG_CHAT: ${{ secrets.TG_CHAT }}
        TG_DEV: ${{ secrets.TG_DEV }}
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - uses: actions/setup-node@v3
          with:
            cache: "npm"

        - name: Installing Node
          run: npm ci

        - name: Checking Config
          run: npm run-script check

        - name: On Failure
          id: send_telegram_failure
          if: ${{ failure() }}
          run: |
            POST="https://api.telegram.org/bot${TG_TOKEN}/sendMessage"
            URL="[Failed Action]($GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)"

            MSG="*Check patches config*
            ${URL}"

            curl -X POST --data-urlencode "parse_mode=Markdown" --data-urlencode "text=${MSG}" --data-urlencode "chat_id=${TG_DEV}" "$POST" >/dev/null
            echo "SHOULD_BUILD=0" >>$GITHUB_OUTPUT

        - name: On Success
          id: config
          shell: bash
          run: echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT

      outputs:
        SHOULD_BUILD: ${{ steps.config.outputs.SHOULD_BUILD }}

  build:
    permissions: write-all
    needs: config_check
    uses: ./.github/workflows/build.yml
    if: ${{ needs.config_check.outputs.SHOULD_BUILD == 1 }}
    secrets: inherit
